CCS PCM C Compiler, Version 5.007, 61971               30-mai-23 10:09

               Filename:   C:\Users\ABMS-Telecom\Documents\CCS C Projects\Semafaro\Semafaro.lst

               ROM used:   90 words (2%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <Semafaro.h> 
.................... #include <16F88.h> 
.................... //////// Standard Header file for the PIC16F88 device //////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOMCLR                	//Master Clear pin used for I/O 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOFCMEN               	//Fail-safe clock monitor disabled 
.................... #FUSES NOIESO                	//Internal External Switch Over mode disabled 
....................  
.................... #use delay(internal=4MHz) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
....................  
....................  
.................... // programa: automatiza um semáfaro simples com 3 LEDs 
.................... // autor: Eng. Marcelo Moraes - arduinobymyself.blogspot.com.br 
.................... // data: 30/05/2023 
.................... // mcu: pic16f88 clock interno 4Mhz 
.................... // pin b0 LED vermelho (5s) 
.................... // pin b1 LED amarelo (3s) 
.................... // pin b2 LED verde (5s) 
....................  
.................... void main() 
0019:  MOVLW  62
001A:  BSF    03.5
001B:  MOVWF  0F
001C:  MOVF   0F,W
001D:  BCF    1F.4
001E:  BCF    1F.5
001F:  MOVF   1B,W
0020:  ANDLW  80
0021:  MOVWF  1B
0022:  MOVLW  07
0023:  MOVWF  1C
0024:  BCF    03.7
0025:  MOVLW  1F
0026:  ANDWF  03,F
.................... { 
....................  
....................    while(TRUE) 
....................    { 
....................     
....................       //TODO: User Code 
....................       output_high(pin_b0); 
0027:  BCF    06.0
0028:  BCF    03.5
0029:  BSF    06.0
....................       output_low(pin_b1); 
002A:  BSF    03.5
002B:  BCF    06.1
002C:  BCF    03.5
002D:  BCF    06.1
....................       output_low(pin_b2); 
002E:  BSF    03.5
002F:  BCF    06.2
0030:  BCF    03.5
0031:  BCF    06.2
....................       delay_ms(5000); 
0032:  MOVLW  14
0033:  MOVWF  21
0034:  MOVLW  FA
0035:  MOVWF  22
0036:  CALL   004
0037:  DECFSZ 21,F
0038:  GOTO   034
....................        
....................       output_low(pin_b0); 
0039:  BSF    03.5
003A:  BCF    06.0
003B:  BCF    03.5
003C:  BCF    06.0
....................       output_high(pin_b2); 
003D:  BSF    03.5
003E:  BCF    06.2
003F:  BCF    03.5
0040:  BSF    06.2
....................       delay_ms(5000); 
0041:  MOVLW  14
0042:  MOVWF  21
0043:  MOVLW  FA
0044:  MOVWF  22
0045:  CALL   004
0046:  DECFSZ 21,F
0047:  GOTO   043
....................        
....................       output_low(pin_b2); 
0048:  BSF    03.5
0049:  BCF    06.2
004A:  BCF    03.5
004B:  BCF    06.2
....................       output_high(pin_b1); 
004C:  BSF    03.5
004D:  BCF    06.1
004E:  BCF    03.5
004F:  BSF    06.1
....................       delay_ms(3000); 
0050:  MOVLW  0C
0051:  MOVWF  21
0052:  MOVLW  FA
0053:  MOVWF  22
0054:  CALL   004
0055:  DECFSZ 21,F
0056:  GOTO   052
0057:  BSF    03.5
0058:  GOTO   027
....................        
....................    } 
....................  
.................... } 
0059:  SLEEP

Configuration Fuses:
   Word  1: 3F10   NOWDT PUT INTRC_IO NOMCLR NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFC   NOFCMEN NOIESO
