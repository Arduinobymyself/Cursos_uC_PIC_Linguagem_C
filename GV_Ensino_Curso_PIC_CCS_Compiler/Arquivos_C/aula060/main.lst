CCS PCM C Compiler, Version 5.007, 61971               31-mai-23 12:19

               Filename:   C:\Users\ABMS-Telecom\Documents\GitHub\Cursos_uC_PIC_Linguagem_C\GV_Ensino_Curso_PIC_CCS_Compiler\aula060\main.lst

               ROM used:   165 words (16%)
                           Largest free fragment is 859
               RAM used:   6 (9%) at main() level
                           7 (11%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
0004:  CALL   3FF
0005:  BSF    03.5
0006:  MOVWF  10
0007:  MOVLW  00
0008:  MOVWF  0A
0009:  GOTO   01E
.................... #include <main.h> 
.................... #include <12F675.h> 
.................... //////// Standard Header file for the PIC12F675 device //////////////// 
.................... #device PIC12F675 
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOMCLR                	//Master Clear pin used for I/O 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
....................  
.................... #use delay(internal=4MHz) 
000A:  MOVLW  26
000B:  MOVWF  04
000C:  MOVF   00,W
000D:  BTFSC  03.2
000E:  GOTO   01D
000F:  MOVLW  01
0010:  MOVWF  21
0011:  CLRF   20
0012:  DECFSZ 20,F
0013:  GOTO   012
0014:  DECFSZ 21,F
0015:  GOTO   011
0016:  MOVLW  4A
0017:  MOVWF  20
0018:  DECFSZ 20,F
0019:  GOTO   018
001A:  GOTO   01B
001B:  DECFSZ 00,F
001C:  GOTO   00F
001D:  GOTO   03E (RETURN)
....................  
....................  
....................  
.................... long valor; // ou int16 
....................  
.................... void main() 
001E:  BCF    1F.6
001F:  BSF    03.5
0020:  BCF    1F.0
0021:  BCF    1F.1
0022:  BCF    1F.2
0023:  BCF    1F.3
0024:  MOVLW  07
0025:  BCF    03.5
0026:  MOVWF  19
0027:  MOVLW  1F
0028:  ANDWF  03,F
.................... { 
....................    setup_adc_ports(sAN0); 
0029:  BCF    1F.6
002A:  BSF    03.5
002B:  BSF    1F.0
002C:  BCF    1F.1
002D:  BCF    1F.2
002E:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_INTERNAL); 
002F:  BSF    1F.4
0030:  BSF    1F.5
0031:  BCF    1F.6
0032:  BCF    03.5
0033:  BSF    1F.7
0034:  BSF    1F.0
....................  
....................    while(TRUE) 
....................    { 
....................       set_adc_channel(0); // configura a entrada de leitura 
0035:  MOVLW  00
0036:  MOVWF  21
0037:  MOVF   1F,W
0038:  ANDLW  F3
0039:  IORWF  21,W
003A:  MOVWF  1F
....................       delay_ms(10); 
003B:  MOVLW  0A
003C:  MOVWF  26
003D:  GOTO   00A
....................        
....................       valor = read_adc(); // leitura da informação 
003E:  BSF    1F.1
003F:  BTFSC  1F.1
0040:  GOTO   03F
0041:  BSF    03.5
0042:  MOVF   1E,W
0043:  BCF    03.5
0044:  MOVWF  24
0045:  MOVF   1E,W
0046:  MOVWF  25
....................        
....................       if(valor >= 0 && valor < 256) 
0047:  MOVF   25,W
0048:  SUBLW  00
0049:  BTFSS  03.0
004A:  GOTO   05B
....................       { 
....................          output_high(pin_a1); 
004B:  BSF    03.5
004C:  BCF    05.1
004D:  BCF    03.5
004E:  BSF    05.1
....................          output_low(pin_a2); 
004F:  BSF    03.5
0050:  BCF    05.2
0051:  BCF    03.5
0052:  BCF    05.2
....................          output_low(pin_a4); 
0053:  BSF    03.5
0054:  BCF    05.4
0055:  BCF    03.5
0056:  BCF    05.4
....................          output_low(pin_a5); 
0057:  BSF    03.5
0058:  BCF    05.5
0059:  BCF    03.5
005A:  BCF    05.5
....................       } 
....................       if(valor >= 256 && valor < 512) 
005B:  MOVF   25,W
005C:  SUBLW  00
005D:  BTFSC  03.0
005E:  GOTO   073
005F:  MOVF   25,W
0060:  SUBLW  01
0061:  BTFSS  03.0
0062:  GOTO   073
....................       { 
....................          output_low(pin_a1); 
0063:  BSF    03.5
0064:  BCF    05.1
0065:  BCF    03.5
0066:  BCF    05.1
....................          output_high(pin_a2); 
0067:  BSF    03.5
0068:  BCF    05.2
0069:  BCF    03.5
006A:  BSF    05.2
....................          output_low(pin_a4); 
006B:  BSF    03.5
006C:  BCF    05.4
006D:  BCF    03.5
006E:  BCF    05.4
....................          output_low(pin_a5); 
006F:  BSF    03.5
0070:  BCF    05.5
0071:  BCF    03.5
0072:  BCF    05.5
....................       } 
....................       if(valor >= 512 && valor < 768) 
0073:  MOVF   25,W
0074:  SUBLW  01
0075:  BTFSC  03.0
0076:  GOTO   08B
0077:  MOVF   25,W
0078:  SUBLW  02
0079:  BTFSS  03.0
007A:  GOTO   08B
....................       { 
....................          output_low(pin_a1); 
007B:  BSF    03.5
007C:  BCF    05.1
007D:  BCF    03.5
007E:  BCF    05.1
....................          output_low(pin_a2); 
007F:  BSF    03.5
0080:  BCF    05.2
0081:  BCF    03.5
0082:  BCF    05.2
....................          output_high(pin_a4); 
0083:  BSF    03.5
0084:  BCF    05.4
0085:  BCF    03.5
0086:  BSF    05.4
....................          output_low(pin_a5); 
0087:  BSF    03.5
0088:  BCF    05.5
0089:  BCF    03.5
008A:  BCF    05.5
....................       } 
....................       if(valor >= 768 && valor < 1024) 
008B:  MOVF   25,W
008C:  SUBLW  02
008D:  BTFSC  03.0
008E:  GOTO   0A3
008F:  MOVF   25,W
0090:  SUBLW  03
0091:  BTFSS  03.0
0092:  GOTO   0A3
....................       { 
....................          output_low(pin_a1); 
0093:  BSF    03.5
0094:  BCF    05.1
0095:  BCF    03.5
0096:  BCF    05.1
....................          output_low(pin_a2); 
0097:  BSF    03.5
0098:  BCF    05.2
0099:  BCF    03.5
009A:  BCF    05.2
....................          output_low(pin_a4); 
009B:  BSF    03.5
009C:  BCF    05.4
009D:  BCF    03.5
009E:  BCF    05.4
....................          output_high(pin_a5); 
009F:  BSF    03.5
00A0:  BCF    05.5
00A1:  BCF    03.5
00A2:  BSF    05.5
....................       } 
00A3:  GOTO   035
....................        
....................    } 
....................  
.................... } 
00A4:  SLEEP

Configuration Fuses:
   Word  1: 3F84   INTRC_IO NOWDT PUT NOMCLR NOBROWNOUT NOPROTECT NOCPD
