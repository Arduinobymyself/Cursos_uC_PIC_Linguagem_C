CCS PCM C Compiler, Version 5.007, 61971               03-jan-23 20:24

               Filename:   C:\Users\ABMS-Telecom\Documents\CCS C Projects\aula026\main.lst

               ROM used:   82 words (2%)
                           Largest free fragment is 2048
               RAM used:   5 (1%) at main() level
                           5 (1%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <main.h> 
.................... #include <16F88.h> 
.................... //////// Standard Header file for the PIC16F88 device //////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOMCLR                	//Master Clear pin used for I/O 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOFCMEN               	//Fail-safe clock monitor disabled 
.................... #FUSES NOIESO                	//Internal External Switch Over mode disabled 
....................  
.................... #use delay(internal=4MHz) 
....................  
....................  
....................  
.................... /*********************************************************************** 
.................... PORTÃO AUTOMÁTICO 
....................  
.................... Fim de curso superior - FS - RA0 
.................... Fim de curso inferior - FI - RB7  
.................... Botão abrir  - BOpen  - RA7 
.................... Botão fechar - BClose - RA6 
....................  
.................... Motor in1 - RB0 - direita 
....................       in2 - RB1 - esquerda 
....................  
.................... ***********************************************************************/ 
.................... #define BOpen     pin_a7 
.................... #define BClose    pin_a6 
.................... #define FS        pin_a0 
.................... #define FI        pin_b7 
....................  
.................... void main() 
0004:  MOVLW  62
0005:  BSF    03.5
0006:  MOVWF  0F
0007:  MOVF   0F,W
0008:  BCF    1F.4
0009:  BCF    1F.5
000A:  MOVF   1B,W
000B:  ANDLW  80
000C:  MOVWF  1B
000D:  MOVLW  07
000E:  MOVWF  1C
000F:  BCF    03.7
0010:  MOVLW  1F
0011:  ANDWF  03,F
.................... { 
....................  
....................    while(TRUE) 
....................    { 
....................       if(input(BOpen) && !input(FS)){ 
0012:  BSF    05.7
0013:  BCF    03.5
0014:  BTFSS  05.7
0015:  GOTO   023
0016:  BSF    03.5
0017:  BSF    05.0
0018:  BCF    03.5
0019:  BTFSC  05.0
001A:  GOTO   023
....................       // portão abre 
....................          output_low(pin_b1); 
001B:  BSF    03.5
001C:  BCF    06.1
001D:  BCF    03.5
001E:  BCF    06.1
....................          output_high(pin_b0); 
001F:  BSF    03.5
0020:  BCF    06.0
0021:  BCF    03.5
0022:  BSF    06.0
....................       } 
....................        
....................       if(input(FS)){ 
0023:  BSF    03.5
0024:  BSF    05.0
0025:  BCF    03.5
0026:  BTFSS  05.0
0027:  GOTO   030
....................             output_low(pin_b0); 
0028:  BSF    03.5
0029:  BCF    06.0
002A:  BCF    03.5
002B:  BCF    06.0
....................             output_low(pin_b1); 
002C:  BSF    03.5
002D:  BCF    06.1
002E:  BCF    03.5
002F:  BCF    06.1
....................       } 
....................        
....................       if(input(BClose) && !input(FI)){ 
0030:  BSF    03.5
0031:  BSF    05.6
0032:  BCF    03.5
0033:  BTFSS  05.6
0034:  GOTO   042
0035:  BSF    03.5
0036:  BSF    06.7
0037:  BCF    03.5
0038:  BTFSC  06.7
0039:  GOTO   042
....................       // portão fecha 
....................          output_low(pin_b0); 
003A:  BSF    03.5
003B:  BCF    06.0
003C:  BCF    03.5
003D:  BCF    06.0
....................          output_high(pin_b1); 
003E:  BSF    03.5
003F:  BCF    06.1
0040:  BCF    03.5
0041:  BSF    06.1
....................       } 
....................        
....................       if(input(FI)){ 
0042:  BSF    03.5
0043:  BSF    06.7
0044:  BCF    03.5
0045:  BTFSS  06.7
0046:  GOTO   04F
....................             output_low(pin_b0); 
0047:  BSF    03.5
0048:  BCF    06.0
0049:  BCF    03.5
004A:  BCF    06.0
....................             output_low(pin_b1); 
004B:  BSF    03.5
004C:  BCF    06.1
004D:  BCF    03.5
004E:  BCF    06.1
....................       } 
004F:  BSF    03.5
0050:  GOTO   012
....................    } 
....................  
.................... } 
0051:  SLEEP

Configuration Fuses:
   Word  1: 3F10   NOWDT PUT INTRC_IO NOMCLR NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFC   NOFCMEN NOIESO
