CCS PCM C Compiler, Version 5.007, 61971               30-mai-23 11:00

               Filename:   C:\Users\ABMS-Telecom\Documents\CCS C Projects\Contador\Contador.lst

               ROM used:   163 words (4%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <Contador.h> 
.................... #include <16F88.h> 
.................... //////// Standard Header file for the PIC16F88 device //////////////// 
.................... #device PIC16F88 
....................  
.................... #list 
....................  
.................... #device ADC=16 
....................  
.................... #FUSES NOWDT                 	//No Watch Dog Timer 
.................... #FUSES NOMCLR                	//Master Clear pin used for I/O 
.................... #FUSES NOBROWNOUT            	//No brownout reset 
.................... #FUSES NOLVP                 	//No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOFCMEN               	//Fail-safe clock monitor disabled 
.................... #FUSES NOIESO                	//Internal External Switch Over mode disabled 
....................  
.................... #use delay(internal=4MHz) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
....................  
....................  
.................... void main() 
0019:  MOVLW  62
001A:  BSF    03.5
001B:  MOVWF  0F
001C:  MOVF   0F,W
001D:  BCF    1F.4
001E:  BCF    1F.5
001F:  MOVF   1B,W
0020:  ANDLW  80
0021:  MOVWF  1B
0022:  MOVLW  07
0023:  MOVWF  1C
0024:  BCF    03.7
0025:  MOVLW  1F
0026:  ANDWF  03,F
.................... { 
....................    set_tris_b(0b00000000); 
0027:  MOVLW  00
0028:  MOVWF  06
....................  
....................    while(TRUE) 
....................    { 
....................       //TODO: User Code 
....................              
....................       output_b(0b00111111); // 0 
0029:  CLRF   06
002A:  MOVLW  3F
002B:  BCF    03.5
002C:  MOVWF  06
....................       delay_ms(1000); 
002D:  MOVLW  04
002E:  MOVWF  21
002F:  MOVLW  FA
0030:  MOVWF  22
0031:  CALL   004
0032:  DECFSZ 21,F
0033:  GOTO   02F
....................        
....................       output_b(0b00000110); // 1 
0034:  BSF    03.5
0035:  CLRF   06
0036:  MOVLW  06
0037:  BCF    03.5
0038:  MOVWF  06
....................       delay_ms(1000); 
0039:  MOVLW  04
003A:  MOVWF  21
003B:  MOVLW  FA
003C:  MOVWF  22
003D:  CALL   004
003E:  DECFSZ 21,F
003F:  GOTO   03B
....................        
....................       output_b(0b01011011); // 2 
0040:  BSF    03.5
0041:  CLRF   06
0042:  MOVLW  5B
0043:  BCF    03.5
0044:  MOVWF  06
....................       delay_ms(1000); 
0045:  MOVLW  04
0046:  MOVWF  21
0047:  MOVLW  FA
0048:  MOVWF  22
0049:  CALL   004
004A:  DECFSZ 21,F
004B:  GOTO   047
....................        
....................       output_b(0b01001111); // 3 
004C:  BSF    03.5
004D:  CLRF   06
004E:  MOVLW  4F
004F:  BCF    03.5
0050:  MOVWF  06
....................       delay_ms(1000); 
0051:  MOVLW  04
0052:  MOVWF  21
0053:  MOVLW  FA
0054:  MOVWF  22
0055:  CALL   004
0056:  DECFSZ 21,F
0057:  GOTO   053
....................        
....................       output_b(0b01100110); // 4 
0058:  BSF    03.5
0059:  CLRF   06
005A:  MOVLW  66
005B:  BCF    03.5
005C:  MOVWF  06
....................       delay_ms(1000); 
005D:  MOVLW  04
005E:  MOVWF  21
005F:  MOVLW  FA
0060:  MOVWF  22
0061:  CALL   004
0062:  DECFSZ 21,F
0063:  GOTO   05F
....................        
....................       output_b(0b01101101); // 5 
0064:  BSF    03.5
0065:  CLRF   06
0066:  MOVLW  6D
0067:  BCF    03.5
0068:  MOVWF  06
....................       delay_ms(1000); 
0069:  MOVLW  04
006A:  MOVWF  21
006B:  MOVLW  FA
006C:  MOVWF  22
006D:  CALL   004
006E:  DECFSZ 21,F
006F:  GOTO   06B
....................        
....................       output_b(0b01111101); // 6 
0070:  BSF    03.5
0071:  CLRF   06
0072:  MOVLW  7D
0073:  BCF    03.5
0074:  MOVWF  06
....................       delay_ms(1000); 
0075:  MOVLW  04
0076:  MOVWF  21
0077:  MOVLW  FA
0078:  MOVWF  22
0079:  CALL   004
007A:  DECFSZ 21,F
007B:  GOTO   077
....................        
....................       output_b(0b00000111); // 7 
007C:  BSF    03.5
007D:  CLRF   06
007E:  MOVLW  07
007F:  BCF    03.5
0080:  MOVWF  06
....................       delay_ms(1000); 
0081:  MOVLW  04
0082:  MOVWF  21
0083:  MOVLW  FA
0084:  MOVWF  22
0085:  CALL   004
0086:  DECFSZ 21,F
0087:  GOTO   083
....................        
....................       output_b(0b01111111); // 8 
0088:  BSF    03.5
0089:  CLRF   06
008A:  MOVLW  7F
008B:  BCF    03.5
008C:  MOVWF  06
....................       delay_ms(1000); 
008D:  MOVLW  04
008E:  MOVWF  21
008F:  MOVLW  FA
0090:  MOVWF  22
0091:  CALL   004
0092:  DECFSZ 21,F
0093:  GOTO   08F
....................        
....................       output_b(0b01101111); // 9 
0094:  BSF    03.5
0095:  CLRF   06
0096:  MOVLW  6F
0097:  BCF    03.5
0098:  MOVWF  06
....................       delay_ms(1000); 
0099:  MOVLW  04
009A:  MOVWF  21
009B:  MOVLW  FA
009C:  MOVWF  22
009D:  CALL   004
009E:  DECFSZ 21,F
009F:  GOTO   09B
00A0:  BSF    03.5
00A1:  GOTO   029
....................  
....................    } 
....................  
.................... } 
00A2:  SLEEP

Configuration Fuses:
   Word  1: 3F10   NOWDT PUT INTRC_IO NOMCLR NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG CCPB0 NOPROTECT
   Word  2: 3FFC   NOFCMEN NOIESO
