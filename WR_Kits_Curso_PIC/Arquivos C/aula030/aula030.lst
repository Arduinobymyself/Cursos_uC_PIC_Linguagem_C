;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 20/01/2023 12:37:00
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2824      	GOTO       36
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A2      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A3      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;aula030.c,71 :: 		void interrupt(){
;aula030.c,73 :: 		if(INTCON.T0IF == 1){ // se houve estouro do Timer 0
0x000B	0x1D0B      	BTFSS      INTCON, 2
0x000C	0x281D      	GOTO       L_interrupt2
;aula030.c,74 :: 		INTCON.T0IF = 0; // limpa a flag de estouro do Timer 0
0x000D	0x110B      	BCF        INTCON, 2
;aula030.c,75 :: 		TMR0 = 0x6C; // reinicia o registrador TMR0
0x000E	0x306C      	MOVLW      108
0x000F	0x0081      	MOVWF      TMR0
;aula030.c,78 :: 		if(!S1){
0x0010	0x1885      	BTFSC      RA1_bit, BitPos(RA1_bit+0)
0x0011	0x2817      	GOTO       L_interrupt3
;aula030.c,79 :: 		CCPR1L++; // incrementa PWM
0x0012	0x0A15      	INCF       CCPR1L, 0
0x0013	0x00F0      	MOVWF      R0
0x0014	0x0870      	MOVF       R0, 0
0x0015	0x0095      	MOVWF      CCPR1L
;aula030.c,80 :: 		}
0x0016	0x281D      	GOTO       L_interrupt4
L_interrupt3:
;aula030.c,81 :: 		else if(!S2){
0x0017	0x1805      	BTFSC      RA0_bit, BitPos(RA0_bit+0)
0x0018	0x281D      	GOTO       L_interrupt5
;aula030.c,82 :: 		CCPR1L--; // decrementa PWM
0x0019	0x0315      	DECF       CCPR1L, 0
0x001A	0x00F0      	MOVWF      R0
0x001B	0x0870      	MOVF       R0, 0
0x001C	0x0095      	MOVWF      CCPR1L
;aula030.c,83 :: 		}
L_interrupt5:
L_interrupt4:
;aula030.c,85 :: 		}
L_interrupt2:
;aula030.c,86 :: 		}
L_end_interrupt:
L__interrupt8:
0x001D	0x0823      	MOVF       ___savePCLATH, 0
0x001E	0x008A      	MOVWF      PCLATH
0x001F	0x0E22      	SWAPF      ___saveSTATUS, 0
0x0020	0x0083      	MOVWF      STATUS
0x0021	0x0EFF      	SWAPF      R15, 1
0x0022	0x0E7F      	SWAPF      R15, 0
0x0023	0x0009      	RETFIE
; end of _interrupt
_main:
;aula030.c,33 :: 		void main() {
;aula030.c,34 :: 		CMCON = 7; // desabilita os comparadores
0x0024	0x3007      	MOVLW      7
0x0025	0x1283      	BCF        STATUS, 5
0x0026	0x1303      	BCF        STATUS, 6
0x0027	0x009F      	MOVWF      CMCON
;aula030.c,36 :: 		OPTION_REG = 0b10000110; //(86h) - Timer 0 incrementa dom ciclo de instrução e prescaler 1:128
0x0028	0x3086      	MOVLW      134
0x0029	0x1683      	BSF        STATUS, 5
0x002A	0x0081      	MOVWF      OPTION_REG
;aula030.c,38 :: 		INTCON.GIE = 1;  // habilita a interrupção global
0x002B	0x178B      	BSF        INTCON, 7
;aula030.c,39 :: 		INTCON.PEIE = 1; // habilita a interrupção por periféricos
0x002C	0x170B      	BSF        INTCON, 6
;aula030.c,40 :: 		INTCON.T0IE = 1; // habilita a interrupção por estouro do Timer 0
0x002D	0x168B      	BSF        INTCON, 5
;aula030.c,42 :: 		TMR0 = 0x6C;
0x002E	0x306C      	MOVLW      108
0x002F	0x1283      	BCF        STATUS, 5
0x0030	0x0081      	MOVWF      TMR0
;aula030.c,45 :: 		T2CON = 0b00000110;    // 0, postscaler 1:1, timer 2 on, prescaler 1:16
0x0031	0x3006      	MOVLW      6
0x0032	0x0092      	MOVWF      T2CON
;aula030.c,46 :: 		PR2 =  255;            // inicializa o registrador de controle do Timer 2
0x0033	0x30FF      	MOVLW      255
0x0034	0x1683      	BSF        STATUS, 5
0x0035	0x0092      	MOVWF      PR2
;aula030.c,47 :: 		CCPR1L = 0X00;         // LED inici[ara apagado
0x0036	0x1283      	BCF        STATUS, 5
0x0037	0x0195      	CLRF       CCPR1L
;aula030.c,48 :: 		CCP1CON = 0b00001100;  // modo PWM habilitado (LSB 11xx)
0x0038	0x300C      	MOVLW      12
0x0039	0x0097      	MOVWF      CCP1CON
;aula030.c,54 :: 		TRISA = 0X03; // RA0 e RA1 são entradas digitais
0x003A	0x3003      	MOVLW      3
0x003B	0x1683      	BSF        STATUS, 5
0x003C	0x0085      	MOVWF      TRISA
;aula030.c,55 :: 		TRISB = 0x00; // todo o port B será saída
0x003D	0x0186      	CLRF       TRISB
;aula030.c,56 :: 		PORTA = 0X03; // RA0 e RA1 iniciam em HIGH
0x003E	0x3003      	MOVLW      3
0x003F	0x1283      	BCF        STATUS, 5
0x0040	0x0085      	MOVWF      PORTA
;aula030.c,57 :: 		PORTB = 0X00; // port B inicia em LOW
0x0041	0x0186      	CLRF       PORTB
;aula030.c,61 :: 		while(1)
L_main0:
;aula030.c,66 :: 		}
0x0042	0x2842      	GOTO       L_main0
;aula030.c,68 :: 		}
L_end_main:
0x0043	0x2843      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [32]    _interrupt
0x0024      [32]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [0]    RA1_bit
0x0005       [0]    RA0_bit
0x0005       [1]    PORTA
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0012       [1]    T2CON
0x0015       [1]    CCPR1L
0x0017       [1]    CCP1CON
0x001F       [1]    CMCON
0x0020       [2]    ___DoICPAddr
0x0022       [1]    ___saveSTATUS
0x0023       [1]    ___savePCLATH
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
0x0092       [1]    PR2
