;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 20/01/2023 09:12:26
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28B6      	GOTO       182
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00A3      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00A4      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
;aula028.c,72 :: 		void interrupt(){
;aula028.c,74 :: 		if(INTCON.T0IF == 1){ // se houve estouro do Timer 0
0x000B	0x1D0B      	BTFSS      INTCON, 2
0x000C	0x2876      	GOTO       L_interrupt2
;aula028.c,75 :: 		INTCON.T0IF = 0;    // limpa a flag de estouro do Timer 0
0x000D	0x110B      	BCF        INTCON, 2
;aula028.c,76 :: 		TMR0 = 0x6C;        // reinicia o registrador TMR0
0x000E	0x306C      	MOVLW      108
0x000F	0x0081      	MOVWF      TMR0
;aula028.c,79 :: 		if(col_1 && control == 1){ // se é a vez da coluna 1
0x0010	0x1C86      	BTFSS      RB1_bit, BitPos(RB1_bit+0)
0x0011	0x2832      	GOTO       L_interrupt5
0x0012	0x0820      	MOVF       _control, 0
0x0013	0x3A01      	XORLW      1
0x0014	0x1D03      	BTFSS      STATUS, 2
0x0015	0x2832      	GOTO       L_interrupt5
L__interrupt40:
;aula028.c,80 :: 		control = 2; // passa a vez para a coluna 2
0x0016	0x3002      	MOVLW      2
0x0017	0x00A0      	MOVWF      _control
;aula028.c,81 :: 		col_1 = 0;   // aciona apenas a coluna 1
0x0018	0x1086      	BCF        RB1_bit, BitPos(RB1_bit+0)
;aula028.c,82 :: 		col_2 = 1;
0x0019	0x1506      	BSF        RB2_bit, BitPos(RB2_bit+0)
;aula028.c,83 :: 		col_3 = 1;
0x001A	0x1586      	BSF        RB3_bit, BitPos(RB3_bit+0)
;aula028.c,84 :: 		if(!row_A) pulse(1);
0x001B	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x001C	0x2821      	GOTO       L_interrupt6
0x001D	0x3001      	MOVLW      1
0x001E	0x00A5      	MOVWF      FARG_pulse_number
0x001F	0x2090      	CALL       _pulse
0x0020	0x2832      	GOTO       L_interrupt7
L_interrupt6:
;aula028.c,85 :: 		else if(!row_B) pulse(4);
0x0021	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x0022	0x2827      	GOTO       L_interrupt8
0x0023	0x3004      	MOVLW      4
0x0024	0x00A5      	MOVWF      FARG_pulse_number
0x0025	0x2090      	CALL       _pulse
0x0026	0x2832      	GOTO       L_interrupt9
L_interrupt8:
;aula028.c,86 :: 		else if(!row_C) pulse(7);
0x0027	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x0028	0x282D      	GOTO       L_interrupt10
0x0029	0x3007      	MOVLW      7
0x002A	0x00A5      	MOVWF      FARG_pulse_number
0x002B	0x2090      	CALL       _pulse
0x002C	0x2832      	GOTO       L_interrupt11
L_interrupt10:
;aula028.c,87 :: 		else if(!row_D) pulse(11);
0x002D	0x1B86      	BTFSC      RB7_bit, BitPos(RB7_bit+0)
0x002E	0x2832      	GOTO       L_interrupt12
0x002F	0x300B      	MOVLW      11
0x0030	0x00A5      	MOVWF      FARG_pulse_number
0x0031	0x2090      	CALL       _pulse
L_interrupt12:
L_interrupt11:
L_interrupt9:
L_interrupt7:
;aula028.c,88 :: 		}
L_interrupt5:
;aula028.c,89 :: 		if(col_2 && control == 2){ // se é a vez da coluna 2
0x0032	0x1D06      	BTFSS      RB2_bit, BitPos(RB2_bit+0)
0x0033	0x2854      	GOTO       L_interrupt15
0x0034	0x0820      	MOVF       _control, 0
0x0035	0x3A02      	XORLW      2
0x0036	0x1D03      	BTFSS      STATUS, 2
0x0037	0x2854      	GOTO       L_interrupt15
L__interrupt39:
;aula028.c,90 :: 		control = 3; // passa a vez para a coluna 3
0x0038	0x3003      	MOVLW      3
0x0039	0x00A0      	MOVWF      _control
;aula028.c,91 :: 		col_1 = 1;
0x003A	0x1486      	BSF        RB1_bit, BitPos(RB1_bit+0)
;aula028.c,92 :: 		col_2 = 0;   // aciona apenas a coluna 2
0x003B	0x1106      	BCF        RB2_bit, BitPos(RB2_bit+0)
;aula028.c,93 :: 		col_3 = 1;
0x003C	0x1586      	BSF        RB3_bit, BitPos(RB3_bit+0)
;aula028.c,94 :: 		if(!row_A) pulse(2);
0x003D	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x003E	0x2843      	GOTO       L_interrupt16
0x003F	0x3002      	MOVLW      2
0x0040	0x00A5      	MOVWF      FARG_pulse_number
0x0041	0x2090      	CALL       _pulse
0x0042	0x2854      	GOTO       L_interrupt17
L_interrupt16:
;aula028.c,95 :: 		else if(!row_B) pulse(5);
0x0043	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x0044	0x2849      	GOTO       L_interrupt18
0x0045	0x3005      	MOVLW      5
0x0046	0x00A5      	MOVWF      FARG_pulse_number
0x0047	0x2090      	CALL       _pulse
0x0048	0x2854      	GOTO       L_interrupt19
L_interrupt18:
;aula028.c,96 :: 		else if(!row_C) pulse(8);
0x0049	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x004A	0x284F      	GOTO       L_interrupt20
0x004B	0x3008      	MOVLW      8
0x004C	0x00A5      	MOVWF      FARG_pulse_number
0x004D	0x2090      	CALL       _pulse
0x004E	0x2854      	GOTO       L_interrupt21
L_interrupt20:
;aula028.c,97 :: 		else if(!row_D) pulse(10);
0x004F	0x1B86      	BTFSC      RB7_bit, BitPos(RB7_bit+0)
0x0050	0x2854      	GOTO       L_interrupt22
0x0051	0x300A      	MOVLW      10
0x0052	0x00A5      	MOVWF      FARG_pulse_number
0x0053	0x2090      	CALL       _pulse
L_interrupt22:
L_interrupt21:
L_interrupt19:
L_interrupt17:
;aula028.c,98 :: 		}
L_interrupt15:
;aula028.c,99 :: 		if(col_3 && control == 3){ // se é a vez da coluna 3
0x0054	0x1D86      	BTFSS      RB3_bit, BitPos(RB3_bit+0)
0x0055	0x2876      	GOTO       L_interrupt25
0x0056	0x0820      	MOVF       _control, 0
0x0057	0x3A03      	XORLW      3
0x0058	0x1D03      	BTFSS      STATUS, 2
0x0059	0x2876      	GOTO       L_interrupt25
L__interrupt38:
;aula028.c,100 :: 		control = 1; // passa a vez para a coluna 1
0x005A	0x3001      	MOVLW      1
0x005B	0x00A0      	MOVWF      _control
;aula028.c,101 :: 		col_1 = 1;
0x005C	0x1486      	BSF        RB1_bit, BitPos(RB1_bit+0)
;aula028.c,102 :: 		col_2 = 1;
0x005D	0x1506      	BSF        RB2_bit, BitPos(RB2_bit+0)
;aula028.c,103 :: 		col_3 = 0;   // aciona apenas a coluna 3
0x005E	0x1186      	BCF        RB3_bit, BitPos(RB3_bit+0)
;aula028.c,104 :: 		if(!row_A) pulse(3);
0x005F	0x1A06      	BTFSC      RB4_bit, BitPos(RB4_bit+0)
0x0060	0x2865      	GOTO       L_interrupt26
0x0061	0x3003      	MOVLW      3
0x0062	0x00A5      	MOVWF      FARG_pulse_number
0x0063	0x2090      	CALL       _pulse
0x0064	0x2876      	GOTO       L_interrupt27
L_interrupt26:
;aula028.c,105 :: 		else if(!row_B) pulse(6);
0x0065	0x1A86      	BTFSC      RB5_bit, BitPos(RB5_bit+0)
0x0066	0x286B      	GOTO       L_interrupt28
0x0067	0x3006      	MOVLW      6
0x0068	0x00A5      	MOVWF      FARG_pulse_number
0x0069	0x2090      	CALL       _pulse
0x006A	0x2876      	GOTO       L_interrupt29
L_interrupt28:
;aula028.c,106 :: 		else if(!row_C) pulse(9);
0x006B	0x1B06      	BTFSC      RB6_bit, BitPos(RB6_bit+0)
0x006C	0x2871      	GOTO       L_interrupt30
0x006D	0x3009      	MOVLW      9
0x006E	0x00A5      	MOVWF      FARG_pulse_number
0x006F	0x2090      	CALL       _pulse
0x0070	0x2876      	GOTO       L_interrupt31
L_interrupt30:
;aula028.c,107 :: 		else if(!row_D) pulse(12);
0x0071	0x1B86      	BTFSC      RB7_bit, BitPos(RB7_bit+0)
0x0072	0x2876      	GOTO       L_interrupt32
0x0073	0x300C      	MOVLW      12
0x0074	0x00A5      	MOVWF      FARG_pulse_number
0x0075	0x2090      	CALL       _pulse
L_interrupt32:
L_interrupt31:
L_interrupt29:
L_interrupt27:
;aula028.c,108 :: 		}
L_interrupt25:
;aula028.c,111 :: 		}
L_interrupt2:
;aula028.c,112 :: 		}
L_end_interrupt:
L__interrupt43:
0x0076	0x0824      	MOVF       ___savePCLATH, 0
0x0077	0x008A      	MOVWF      PCLATH
0x0078	0x0E23      	SWAPF      ___saveSTATUS, 0
0x0079	0x0083      	MOVWF      STATUS
0x007A	0x0EFF      	SWAPF      R15, 1
0x007B	0x0E7F      	SWAPF      R15, 0
0x007C	0x0009      	RETFIE
; end of _interrupt
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x007D	0x1283      	BCF        STATUS, 5
0x007E	0x1303      	BCF        STATUS, 6
0x007F	0x0822      	MOVF       ___DoICPAddr+1, 0
0x0080	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0081	0x0821      	MOVF       ___DoICPAddr, 0
0x0082	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0083	0x0008      	RETURN
; end of _____DoICP
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0084	0x207D      	CALL       _____DoICP
0x0085	0x118A      	BCF        PCLATH, 3
0x0086	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x0087	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0088	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0089	0x0AA1      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x008A	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x008B	0x0AA2      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x008C	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x008D	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x008E	0x2884      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x008F	0x0008      	RETURN
; end of ___CC2DW
_pulse:
;aula028.c,114 :: 		void pulse(char number){ // pulsa o LED 1 de acordo com o número pressionado no teclado
;aula028.c,116 :: 		for(i = 0; i < number; i++){
0x0090	0x1283      	BCF        STATUS, 5
0x0091	0x1303      	BCF        STATUS, 6
0x0092	0x01F1      	CLRF       R1
L_pulse33:
0x0093	0x0825      	MOVF       FARG_pulse_number, 0
0x0094	0x0271      	SUBWF      R1, 0
0x0095	0x1803      	BTFSC      STATUS, 0
0x0096	0x28B5      	GOTO       L_pulse34
;aula028.c,117 :: 		L1 = 1;
0x0097	0x1585      	BSF        RA3_bit, BitPos(RA3_bit+0)
;aula028.c,118 :: 		delay_ms(200);
0x0098	0x3002      	MOVLW      2
0x0099	0x00FB      	MOVWF      R11
0x009A	0x3004      	MOVLW      4
0x009B	0x00FC      	MOVWF      R12
0x009C	0x30BA      	MOVLW      186
0x009D	0x00FD      	MOVWF      R13
L_pulse36:
0x009E	0x0BFD      	DECFSZ     R13, 1
0x009F	0x289E      	GOTO       L_pulse36
0x00A0	0x0BFC      	DECFSZ     R12, 1
0x00A1	0x289E      	GOTO       L_pulse36
0x00A2	0x0BFB      	DECFSZ     R11, 1
0x00A3	0x289E      	GOTO       L_pulse36
0x00A4	0x0000      	NOP
;aula028.c,119 :: 		L1 = 0;
0x00A5	0x1185      	BCF        RA3_bit, BitPos(RA3_bit+0)
;aula028.c,120 :: 		delay_ms(200);
0x00A6	0x3002      	MOVLW      2
0x00A7	0x00FB      	MOVWF      R11
0x00A8	0x3004      	MOVLW      4
0x00A9	0x00FC      	MOVWF      R12
0x00AA	0x30BA      	MOVLW      186
0x00AB	0x00FD      	MOVWF      R13
L_pulse37:
0x00AC	0x0BFD      	DECFSZ     R13, 1
0x00AD	0x28AC      	GOTO       L_pulse37
0x00AE	0x0BFC      	DECFSZ     R12, 1
0x00AF	0x28AC      	GOTO       L_pulse37
0x00B0	0x0BFB      	DECFSZ     R11, 1
0x00B1	0x28AC      	GOTO       L_pulse37
0x00B2	0x0000      	NOP
;aula028.c,116 :: 		for(i = 0; i < number; i++){
0x00B3	0x0AF1      	INCF       R1, 1
;aula028.c,121 :: 		}
0x00B4	0x2893      	GOTO       L_pulse33
L_pulse34:
;aula028.c,122 :: 		}
L_end_pulse:
0x00B5	0x0008      	RETURN
; end of _pulse
_main:
0x00B6	0x3001      	MOVLW      1
0x00B7	0x1283      	BCF        STATUS, 5
0x00B8	0x1303      	BCF        STATUS, 6
0x00B9	0x00A0      	MOVWF      _control
;aula028.c,42 :: 		void main() {
;aula028.c,43 :: 		CMCON = 7; // desabilita os comparadores
0x00BA	0x3007      	MOVLW      7
0x00BB	0x009F      	MOVWF      CMCON
;aula028.c,45 :: 		OPTION_REG = 0b10000110; //(86h) - Timer 0 incrementa dom ciclo de instrução e prescaler 1:128
0x00BC	0x3086      	MOVLW      134
0x00BD	0x1683      	BSF        STATUS, 5
0x00BE	0x0081      	MOVWF      OPTION_REG
;aula028.c,47 :: 		INTCON.GIE = 1;  // habilita a interrupção global
0x00BF	0x178B      	BSF        INTCON, 7
;aula028.c,48 :: 		INTCON.PEIE = 1; // habilita a interrupção por periféricos
0x00C0	0x170B      	BSF        INTCON, 6
;aula028.c,49 :: 		INTCON.T0IE = 1; // habilita a interrupção por estouro do Timer 0
0x00C1	0x168B      	BSF        INTCON, 5
;aula028.c,51 :: 		TMR0 = 0x6C;     // TE = CM*PS*(256-TMR0) = 1us*128*(256-108) = 18,94ms
0x00C2	0x306C      	MOVLW      108
0x00C3	0x1283      	BCF        STATUS, 5
0x00C4	0x0081      	MOVWF      TMR0
;aula028.c,54 :: 		TRISA = 0X03; // RA0 e RA1 são entradas digitais
0x00C5	0x3003      	MOVLW      3
0x00C6	0x1683      	BSF        STATUS, 5
0x00C7	0x0085      	MOVWF      TRISA
;aula028.c,55 :: 		TRISB = 0XF0; // nibble mais significativo do port B serão entradas
0x00C8	0x30F0      	MOVLW      240
0x00C9	0x0086      	MOVWF      TRISB
;aula028.c,56 :: 		PORTA = 0X03; // RA0 e RA1 iniciam em HIGH
0x00CA	0x3003      	MOVLW      3
0x00CB	0x1283      	BCF        STATUS, 5
0x00CC	0x0085      	MOVWF      PORTA
;aula028.c,57 :: 		PORTB = 0XFF; // port B inicia en nível lógico baixo
0x00CD	0x30FF      	MOVLW      255
0x00CE	0x0086      	MOVWF      PORTB
;aula028.c,62 :: 		while(1)
L_main0:
;aula028.c,67 :: 		}
0x00CF	0x28CF      	GOTO       L_main0
;aula028.c,69 :: 		}
L_end_main:
0x00D0	0x28D0      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [121]    _interrupt
0x007D       [7]    _____DoICP
0x0084      [12]    ___CC2DW
0x0090      [38]    _pulse
0x00B6      [27]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0005       [0]    RA3_bit
0x0005       [1]    PORTA
0x0006       [0]    RB5_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB7_bit
0x0006       [0]    RB6_bit
0x0006       [0]    RB1_bit
0x0006       [1]    PORTB
0x0006       [0]    RB3_bit
0x0006       [0]    RB2_bit
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x001F       [1]    CMCON
0x0020       [1]    _control
0x0021       [2]    ___DoICPAddr
0x0023       [1]    ___saveSTATUS
0x0024       [1]    ___savePCLATH
0x0025       [1]    FARG_pulse_number
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0085       [1]    TRISA
0x0086       [1]    TRISB
