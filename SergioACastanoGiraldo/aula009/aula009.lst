CCS PCM C Compiler, Version 5.007, 61971               21-jul-23 07:42

               Filename:   C:\Users\ABMS-Telecom\Documents\GitHub\Cursos_uC_PIC_Linguagem_C\SergioACastanoGiraldo\aula009\aula009.lst

               ROM used:   130 words (2%)
                           Largest free fragment is 2048
               RAM used:   14 (4%) at main() level
                           15 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   05C
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   03D
.................... // INTERRUPÇÕES 
.................... /* 
.................... #INT_EXT              INTERRUPCIÓN EXTERNA 
.................... #INT_RTCC            DESBORDAMIENTO DEL TIMER0(RTCC) 
.................... #INT_RB                  CAMBIO EN UNO DE LOS PINES B4,B5,B6,B7 
.................... #INT_AD                  CONVERSOR A/D 
.................... #INT_EEPROM   ESCRITURA EN LA EEPROM COMPLETADA 
.................... #INT_TIMER1      DESBORDAMIENTO DEL TIMER1 
.................... #INT_TIMER2     DESBORDAMIENTO DEL TIMER2 
....................  
.................... // PARA PIC18F4550: 
.................... #include <18f4550.h> 
.................... #byte porta = 0xf80 // Identificador para el puerto A.  
.................... #byte portb = 0xf81 // Identificador para el puerto B.  
.................... #byte portc = 0xf82 // Identificador para el puerto C.  
.................... #byte portd = 0xf83 // Identificador para el puerto D.  
.................... #byte porte = 0xf84 // Identificador para el puerto E. 
....................  
....................  
.................... */ 
....................  
.................... #INCLUDE <16F887.H> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
002F:  BCF    0A.0
0030:  BCF    0A.1
0031:  BCF    0A.2
0032:  ADDWF  02,F
0033:  RETLW  3F
0034:  RETLW  06
0035:  RETLW  5B
0036:  RETLW  4F
0037:  RETLW  66
0038:  RETLW  6D
0039:  RETLW  7D
003A:  RETLW  07
003B:  RETLW  7F
003C:  RETLW  67
....................  
.................... #list 
....................  
.................... #FUSES XT,NOLVP,NOWDT,PUT 
.................... //#USE DELAY(CLOCK=4000000) //Cystal interno 4MHz 
.................... #use delay(clock=4000000,crystal)//Crystal Externo 4MHz 
*
003F:  MOVLW  29
0040:  MOVWF  04
0041:  BCF    03.7
0042:  MOVF   00,W
0043:  BTFSC  03.2
0044:  GOTO   053
0045:  MOVLW  01
0046:  MOVWF  78
0047:  CLRF   77
0048:  DECFSZ 77,F
0049:  GOTO   048
004A:  DECFSZ 78,F
004B:  GOTO   047
004C:  MOVLW  4A
004D:  MOVWF  77
004E:  DECFSZ 77,F
004F:  GOTO   04E
0050:  GOTO   051
0051:  DECFSZ 00,F
0052:  GOTO   045
.................... Byte CONST display[10]= {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x67}; 
.................... #BYTE PORTC = 7 
.................... #BYTE PORTB = 6 
.................... INT CONT=0; 
....................  
....................  
.................... #INT_EXT             //Funcion de la Interrupcion 
.................... VOID INTERRUPCION() 
.................... { 
....................    DELAY_MS(200);    //Retardo 
*
003D:  MOVLW  C8
003E:  MOVWF  29
....................    CONT++;           //Incremente la variable CONT 
*
0053:  INCF   27,F
....................    IF(CONT==10)      //Si la variable CONT es igual a 10 
0054:  MOVF   27,W
0055:  SUBLW  0A
0056:  BTFSC  03.2
....................       CONT=0;        //Ponga en cero la variable CONT 
0057:  CLRF   27
0058:  BCF    0B.1
0059:  BCF    0A.3
005A:  BCF    0A.4
005B:  GOTO   01B
.................... } 
....................  
.................... VOID MAIN() 
005C:  CLRF   27
005D:  MOVLW  FF
005E:  MOVWF  28
005F:  BSF    03.5
0060:  BSF    03.6
0061:  MOVF   09,W
0062:  ANDLW  C0
0063:  MOVWF  09
0064:  BCF    03.6
0065:  BCF    1F.4
0066:  BCF    1F.5
0067:  MOVLW  00
0068:  BSF    03.6
0069:  MOVWF  08
006A:  BCF    03.5
006B:  CLRF   07
006C:  CLRF   08
006D:  CLRF   09
006E:  BCF    03.7
006F:  MOVLW  1F
0070:  ANDWF  03,F
.................... { 
....................    SET_TRIS_B(0B11111111);       //Configurar el puerto B 
0071:  MOVLW  FF
0072:  BSF    03.5
0073:  BCF    03.6
0074:  MOVWF  06
....................    SET_TRIS_C(0);                //Configurar el puerto C 
0075:  MOVLW  00
0076:  MOVWF  07
0077:  BCF    03.5
0078:  MOVWF  28
....................    ENABLE_INTERRUPTS(GLOBAL);    //Habilita todas las interrupciones 
0079:  MOVLW  C0
007A:  IORWF  0B,F
....................    ENABLE_INTERRUPTS(INT_EXT);   //Habilita la interrupción externa 
007B:  BSF    0B.4
....................    WHILE(TRUE) 
....................    { 
....................       PORTC= (display[CONT]);    //Muestra lo que hay en la variable CONT en el display 
007C:  MOVF   27,W
007D:  CALL   02F
007E:  MOVWF  78
007F:  MOVWF  07
0080:  GOTO   07C
....................    } 
.................... } 
0081:  SLEEP

Configuration Fuses:
   Word  1: 2FE1   XT NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
