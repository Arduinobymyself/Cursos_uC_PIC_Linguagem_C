CCS PCM C Compiler, Version 5.007, 61971               20-jul-23 21:52

               Filename:   C:\Users\ABMS-Telecom\Documents\GitHub\Cursos_uC_PIC_Linguagem_C\SergioACastanoGiraldo\aula005\aula005.lst

               ROM used:   91 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... // SEQUENCIAL LEDS - LEDS INICIAM APAGADOS E VÃO ACENDENDO 
....................  
.................... #INCLUDE<16F887.h> 
.................... //////// Standard Header file for the PIC16F887 device //////////////// 
.................... #device PIC16F887 
....................  
.................... #list 
....................  
.................... #USE DELAY(CLOCK=4000000) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #FUSES XT,NOPROTECT,NOWDT,NOBROWNOUT,PUT,NOLVP 
....................  
.................... #BYTE PORTB=6 
.................... MAIN() 
0019:  BSF    03.5
001A:  BSF    03.6
001B:  MOVF   09,W
001C:  ANDLW  C0
001D:  MOVWF  09
001E:  BCF    03.6
001F:  BCF    1F.4
0020:  BCF    1F.5
0021:  MOVLW  00
0022:  BSF    03.6
0023:  MOVWF  08
0024:  BCF    03.5
0025:  CLRF   07
0026:  CLRF   08
0027:  CLRF   09
0028:  BCF    03.7
0029:  MOVLW  1F
002A:  ANDWF  03,F
.................... { 
....................    SET_TRIS_B(0B00000000);          //Configura el Puerto B Como salidas 
002B:  MOVLW  00
002C:  BSF    03.5
002D:  BCF    03.6
002E:  MOVWF  06
....................    PORTB=0;                         //Comienza con todos los Leds Apagados 
002F:  BCF    03.5
0030:  CLRF   06
....................    WHILE(TRUE)                      //Haga por siempre .... 
....................    { 
....................       PORTB=0B00000001;             //Prendo unicamente el led de RB0 
0031:  MOVLW  01
0032:  MOVWF  06
....................       DELAY_MS(500);                //Retardo de 500 milisegundos 
0033:  MOVLW  02
0034:  MOVWF  21
0035:  MOVLW  FA
0036:  MOVWF  22
0037:  CALL   004
0038:  DECFSZ 21,F
0039:  GOTO   035
....................       WHILE (!BIT_TEST(PORTB,7))    //Haga mientras el LED RB7 se encuentre apagado 
003A:  BTFSC  06.7
003B:  GOTO   046
....................       { 
....................          PORTB=PORTB<<1;            //Rote hacia la izquierda una unidad 
003C:  BCF    03.0
003D:  RLF    06,F
....................          DELAY_MS(500);             //Retardo de 500 milisegundos 
003E:  MOVLW  02
003F:  MOVWF  21
0040:  MOVLW  FA
0041:  MOVWF  22
0042:  CALL   004
0043:  DECFSZ 21,F
0044:  GOTO   040
0045:  GOTO   03A
....................       } 
....................       DELAY_MS(500);                //Retardo de 500 milisegundos 
0046:  MOVLW  02
0047:  MOVWF  21
0048:  MOVLW  FA
0049:  MOVWF  22
004A:  CALL   004
004B:  DECFSZ 21,F
004C:  GOTO   048
....................       WHILE (!BIT_TEST(PORTB,0))    //Haga mientras el LED RB0 se encuentre apagado 
004D:  BTFSC  06.0
004E:  GOTO   059
....................       { 
....................          PORTB=PORTB>>1;            //Rote hacia la derecha una unidad 
004F:  BCF    03.0
0050:  RRF    06,F
....................          DELAY_MS(500);             //Retardo de 500 milisegundos 
0051:  MOVLW  02
0052:  MOVWF  21
0053:  MOVLW  FA
0054:  MOVWF  22
0055:  CALL   004
0056:  DECFSZ 21,F
0057:  GOTO   053
0058:  GOTO   04D
....................       } 
0059:  GOTO   031
....................    } 
.................... } 
....................  
005A:  SLEEP
.................... /* 
.................... // PARA LÓGICA INVERTIDA - LEDS INICIAM ACESOS E VÃO APAGANDO 
....................  
.................... #INCLUDE<16F887.h> 
.................... #USE DELAY(CLOCK=4000000) 
.................... #FUSES XT,NOPROTECT,NOWDT,NOBROWNOUT,PUT,NOLVP 
....................  
.................... #BYTE PORTB=6 
.................... int AUX; 
.................... MAIN() 
.................... { 
....................    SET_TRIS_B(0B00000000);          //Configura el Puerto B Como salidas 
....................    PORTB=0;                         //Comienza con todos los Leds Apagados 
....................    WHILE(TRUE)                      //Haga por siempre .... 
....................    { 
....................       PORTB=0B11111110;             //Prendo unicamente el led de RB0 
....................       AUX=0B00000001;  
....................       DELAY_MS(500);                //Retardo de 500 milisegundos 
....................       WHILE (BIT_TEST(PORTB,7))    //Haga mientras el LED RB7 se encuentre encendido 
....................       { 
....................          AUX=AUX<<1;                 //Rote hacia la izquierda una unidad 
....................          PORTB=~(AUX);             //Complementar la variable AUX 
....................          DELAY_MS(500);             //Retardo de 500 milisegundos 
....................       } 
....................       DELAY_MS(500);                //Retardo de 500 milisegundos 
....................       WHILE (BIT_TEST(PORTB,0))    //Haga mientras el LED RB0 se encuentre encendido 
....................       { 
....................           AUX=AUX>>1;                 //Rote hacia la izquierda una unidad 
....................          PORTB=~(AUX);             //Complementar la variable AUX 
....................          DELAY_MS(500);             //Retardo de 500 milisegundos 
....................       } 
....................    } 
.................... } 
.................... */ 

Configuration Fuses:
   Word  1: 2CE1   XT NOWDT PUT MCLR NOPROTECT NOCPD NOBROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
