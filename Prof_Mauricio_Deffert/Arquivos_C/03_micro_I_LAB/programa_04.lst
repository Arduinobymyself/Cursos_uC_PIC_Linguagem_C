;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 19/01/2023 11:03:19
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2803      	GOTO       3
_main:
;programa_04.c,7 :: 		void main() {
;programa_04.c,9 :: 		ADCON1 = 0b00000111;    // configura pinos de I/O como digital
0x0003	0x3007      	MOVLW      7
0x0004	0x1683      	BSF        STATUS, 5
0x0005	0x1303      	BCF        STATUS, 6
0x0006	0x009F      	MOVWF      ADCON1
;programa_04.c,10 :: 		TRISD = 0b00000000;     // port D como saída
0x0007	0x0188      	CLRF       TRISD
;programa_04.c,11 :: 		PORTD = 0b00000000;     // port D inicia em nível LOW LEDs apagados
0x0008	0x1283      	BCF        STATUS, 5
0x0009	0x0188      	CLRF       PORTD
;programa_04.c,12 :: 		TRISB = 0b00000001;     // port B pino RB0 como entrada digital
0x000A	0x3001      	MOVLW      1
0x000B	0x1683      	BSF        STATUS, 5
0x000C	0x0086      	MOVWF      TRISB
;programa_04.c,13 :: 		PORTB = 0b00000001;     // port B pino RB0 com pull-up
0x000D	0x3001      	MOVLW      1
0x000E	0x1283      	BCF        STATUS, 5
0x000F	0x0086      	MOVWF      PORTB
;programa_04.c,17 :: 		while(1){
L_main0:
;programa_04.c,18 :: 		int flag = 0;           // sinaliza o estado do botão B0
0x0010	0x01A2      	CLRF       main_flag_L1
0x0011	0x01A3      	CLRF       main_flag_L1+1
;programa_04.c,19 :: 		if(PORTB.RB0 == 0){ // se botão B0 pressionado
0x0012	0x1806      	BTFSC      PORTB, 0
0x0013	0x282D      	GOTO       L_main2
;programa_04.c,20 :: 		delay_ms(30);     // delay para debouncing do botão
0x0014	0x304E      	MOVLW      78
0x0015	0x00FC      	MOVWF      R12
0x0016	0x30EB      	MOVLW      235
0x0017	0x00FD      	MOVWF      R13
L_main3:
0x0018	0x0BFD      	DECFSZ     R13, 1
0x0019	0x2818      	GOTO       L_main3
0x001A	0x0BFC      	DECFSZ     R12, 1
0x001B	0x2818      	GOTO       L_main3
;programa_04.c,22 :: 		if(flag == 0){
0x001C	0x3000      	MOVLW      0
0x001D	0x0623      	XORWF      main_flag_L1+1, 0
0x001E	0x1D03      	BTFSS      STATUS, 2
0x001F	0x2822      	GOTO       L__main7
0x0020	0x3000      	MOVLW      0
0x0021	0x0622      	XORWF      main_flag_L1, 0
L__main7:
0x0022	0x1D03      	BTFSS      STATUS, 2
0x0023	0x282B      	GOTO       L_main4
;programa_04.c,23 :: 		PORTD.RD0 = ~PORTD.RD0; // inverte estado do LED D0
0x0024	0x3001      	MOVLW      1
0x0025	0x0688      	XORWF      PORTD, 1
;programa_04.c,24 :: 		flag = 1;               // sinaliza flag de estado do botão (pressionado)
0x0026	0x3001      	MOVLW      1
0x0027	0x00A2      	MOVWF      main_flag_L1
0x0028	0x3000      	MOVLW      0
0x0029	0x00A3      	MOVWF      main_flag_L1+1
;programa_04.c,25 :: 		} else {
0x002A	0x282D      	GOTO       L_main5
L_main4:
;programa_04.c,26 :: 		flag = 0;               // reincializa o flag
0x002B	0x01A2      	CLRF       main_flag_L1
0x002C	0x01A3      	CLRF       main_flag_L1+1
;programa_04.c,27 :: 		}
L_main5:
;programa_04.c,29 :: 		}
L_main2:
;programa_04.c,31 :: 		}
0x002D	0x2810      	GOTO       L_main0
;programa_04.c,33 :: 		}
L_end_main:
0x002E	0x282E      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [44]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x0020       [2]    ___DoICPAddr
0x0022       [2]    main_flag_L1
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0088       [1]    TRISD
0x009F       [1]    ADCON1
