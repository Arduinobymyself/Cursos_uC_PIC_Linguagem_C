;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 18/01/2023 18:15:55
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x28B3      	GOTO       179
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00B5      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00B4      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A0      	MOVWF      32
;Timer-Counter_Ex_3.c,65 :: 		void interrupt(){
;Timer-Counter_Ex_3.c,66 :: 		if(INTCON.TMR0IF == 1){
0x000D	0x1D0B      	BTFSS      INTCON, 2
0x000E	0x281B      	GOTO       L_interrupt3
;Timer-Counter_Ex_3.c,67 :: 		cont++;
0x000F	0x0AAD      	INCF       _cont, 1
;Timer-Counter_Ex_3.c,68 :: 		if(cont == 40){ // 40*25ms = 1s
0x0010	0x082D      	MOVF       _cont, 0
0x0011	0x3A28      	XORLW      40
0x0012	0x1D03      	BTFSS      STATUS, 2
0x0013	0x2818      	GOTO       L_interrupt4
;Timer-Counter_Ex_3.c,69 :: 		num++;
0x0014	0x0AB2      	INCF       _num, 1
0x0015	0x1903      	BTFSC      STATUS, 2
0x0016	0x0AB3      	INCF       _num+1, 1
;Timer-Counter_Ex_3.c,70 :: 		cont = 0;
0x0017	0x01AD      	CLRF       _cont
;Timer-Counter_Ex_3.c,71 :: 		}
L_interrupt4:
;Timer-Counter_Ex_3.c,72 :: 		TMR0 = 61;          // recarregamento do registrador TIMER 0
0x0018	0x303D      	MOVLW      61
0x0019	0x0081      	MOVWF      TMR0
;Timer-Counter_Ex_3.c,73 :: 		INTCON.TMR0IF = 0;  // reincia a flag de estouro do TIMER 0
0x001A	0x110B      	BCF        INTCON, 2
;Timer-Counter_Ex_3.c,74 :: 		}
L_interrupt3:
;Timer-Counter_Ex_3.c,75 :: 		}
L_end_interrupt:
L__interrupt10:
0x001B	0x0820      	MOVF       32, 0
0x001C	0x00F0      	MOVWF      R0
0x001D	0x0834      	MOVF       ___savePCLATH, 0
0x001E	0x008A      	MOVWF      PCLATH
0x001F	0x0E35      	SWAPF      ___saveSTATUS, 0
0x0020	0x0083      	MOVWF      STATUS
0x0021	0x0EFF      	SWAPF      R15, 1
0x0022	0x0E7F      	SWAPF      R15, 0
0x0023	0x0009      	RETFIE
; end of _interrupt
_Div_16X16_U:
;__Lib_Math.c,215 :: 		
;__Lib_Math.c,222 :: 		
0x0024	0x1283      	BCF        STATUS, 5
;__Lib_Math.c,223 :: 		
0x0025	0x1303      	BCF        STATUS, 6
;__Lib_Math.c,224 :: 		
0x0026	0x01F8      	CLRF       R8
;__Lib_Math.c,225 :: 		
0x0027	0x01F9      	CLRF       R9
;__Lib_Math.c,226 :: 		
0x0028	0x3010      	MOVLW      16
;__Lib_Math.c,227 :: 		
0x0029	0x00FC      	MOVWF      R12
;__Lib_Math.c,228 :: 		
0x002A	0x0D71      	RLF        R1, 0
;__Lib_Math.c,229 :: 		
0x002B	0x0DF8      	RLF        R8, 1
;__Lib_Math.c,230 :: 		
0x002C	0x0DF9      	RLF        R9, 1
;__Lib_Math.c,231 :: 		
0x002D	0x0874      	MOVF       R4, 0
;__Lib_Math.c,232 :: 		
0x002E	0x02F8      	SUBWF      R8, 1
;__Lib_Math.c,233 :: 		
0x002F	0x0875      	MOVF       R5, 0
;__Lib_Math.c,234 :: 		
0x0030	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.c,235 :: 		
0x0031	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,236 :: 		
0x0032	0x02F9      	SUBWF      R9, 1
;__Lib_Math.c,237 :: 		
0x0033	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,238 :: 		
0x0034	0x283C      	GOTO       $+8
;__Lib_Math.c,239 :: 		
0x0035	0x0874      	MOVF       R4, 0
;__Lib_Math.c,240 :: 		
0x0036	0x07F8      	ADDWF      R8, 1
;__Lib_Math.c,241 :: 		
0x0037	0x0875      	MOVF       R5, 0
;__Lib_Math.c,242 :: 		
0x0038	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.c,243 :: 		
0x0039	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.c,244 :: 		
0x003A	0x07F9      	ADDWF      R9, 1
;__Lib_Math.c,245 :: 		
0x003B	0x1003      	BCF        STATUS, 0
;__Lib_Math.c,246 :: 		
0x003C	0x0DF0      	RLF        R0, 1
;__Lib_Math.c,247 :: 		
0x003D	0x0DF1      	RLF        R1, 1
;__Lib_Math.c,248 :: 		
0x003E	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.c,249 :: 		
0x003F	0x282A      	GOTO       $-21
;__Lib_Math.c,251 :: 		
L_end_Div_16X16_U:
0x0040	0x0008      	RETURN
; end of _Div_16X16_U
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x0041	0x1283      	BCF        STATUS, 5
0x0042	0x1303      	BCF        STATUS, 6
0x0043	0x082F      	MOVF       ___DoICPAddr+1, 0
0x0044	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0045	0x082E      	MOVF       ___DoICPAddr, 0
0x0046	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0047	0x0008      	RETURN
; end of _____DoICP
_config_interrupt:
;Timer-Counter_Ex_3.c,108 :: 		void config_interrupt(){
;Timer-Counter_Ex_3.c,109 :: 		INTCON.GIE = 1;       // habilita interupção global
0x0048	0x178B      	BSF        INTCON, 7
;Timer-Counter_Ex_3.c,110 :: 		INTCON.PEIE = 0;      // desabilita interrupção por periféricos
0x0049	0x130B      	BCF        INTCON, 6
;Timer-Counter_Ex_3.c,111 :: 		INTCON.TMR0IE = 1;    // habilita interrupção por estouro do TIMER 0
0x004A	0x168B      	BSF        INTCON, 5
;Timer-Counter_Ex_3.c,112 :: 		}
L_end_config_interrupt:
0x004B	0x0008      	RETURN
; end of _config_interrupt
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x004C	0x2041      	CALL       _____DoICP
0x004D	0x118A      	BCF        PCLATH, 3
0x004E	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x004F	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x0050	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x0051	0x0AAE      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0052	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0053	0x0AAF      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0054	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0055	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0056	0x284C      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0057	0x0008      	RETURN
; end of ___CC2DW
_config_ports:
;Timer-Counter_Ex_3.c,101 :: 		void config_ports(){
;Timer-Counter_Ex_3.c,102 :: 		TRISD = 0b00000000;
0x0058	0x1683      	BSF        STATUS, 5
0x0059	0x1303      	BCF        STATUS, 6
0x005A	0x0188      	CLRF       TRISD
;Timer-Counter_Ex_3.c,103 :: 		PORTD = 0b00000000;
0x005B	0x1283      	BCF        STATUS, 5
0x005C	0x0188      	CLRF       PORTD
;Timer-Counter_Ex_3.c,104 :: 		TRISC = 0b00000000;
0x005D	0x1683      	BSF        STATUS, 5
0x005E	0x0187      	CLRF       TRISC
;Timer-Counter_Ex_3.c,105 :: 		PORTC = 0b00000000;
0x005F	0x1283      	BCF        STATUS, 5
0x0060	0x0187      	CLRF       PORTC
;Timer-Counter_Ex_3.c,106 :: 		}
L_end_config_ports:
0x0061	0x0008      	RETURN
; end of _config_ports
_display_dezena:
;Timer-Counter_Ex_3.c,77 :: 		void display_dezena(){
;Timer-Counter_Ex_3.c,78 :: 		PORTC.RC4 = 1;
0x0062	0x1283      	BCF        STATUS, 5
0x0063	0x1303      	BCF        STATUS, 6
0x0064	0x1607      	BSF        PORTC, 4
;Timer-Counter_Ex_3.c,79 :: 		dezena = num/10;
0x0065	0x300A      	MOVLW      10
0x0066	0x00F4      	MOVWF      R4
0x0067	0x3000      	MOVLW      0
0x0068	0x00F5      	MOVWF      R4+1
0x0069	0x0832      	MOVF       _num, 0
0x006A	0x00F0      	MOVWF      R0
0x006B	0x0833      	MOVF       _num+1, 0
0x006C	0x00F1      	MOVWF      R0+1
0x006D	0x2024      	CALL       _Div_16X16_U
0x006E	0x0870      	MOVF       R0, 0
0x006F	0x00AB      	MOVWF      _dezena
0x0070	0x0871      	MOVF       R0+1, 0
0x0071	0x00AC      	MOVWF      _dezena+1
;Timer-Counter_Ex_3.c,80 :: 		PORTD = pattern[dezena];
0x0072	0x0870      	MOVF       R0, 0
0x0073	0x3E21      	ADDLW      _pattern
0x0074	0x0084      	MOVWF      FSR
0x0075	0x0800      	MOVF       INDF, 0
0x0076	0x0088      	MOVWF      PORTD
;Timer-Counter_Ex_3.c,81 :: 		delay_ms(5);
0x0077	0x300D      	MOVLW      13
0x0078	0x00FC      	MOVWF      R12
0x0079	0x30FB      	MOVLW      251
0x007A	0x00FD      	MOVWF      R13
L_display_dezena5:
0x007B	0x0BFD      	DECFSZ     R13, 1
0x007C	0x287B      	GOTO       L_display_dezena5
0x007D	0x0BFC      	DECFSZ     R12, 1
0x007E	0x287B      	GOTO       L_display_dezena5
0x007F	0x0000      	NOP
0x0080	0x0000      	NOP
;Timer-Counter_Ex_3.c,82 :: 		PORTC.RC4 = 0;
0x0081	0x1207      	BCF        PORTC, 4
;Timer-Counter_Ex_3.c,83 :: 		PORTD = 0;
0x0082	0x0188      	CLRF       PORTD
;Timer-Counter_Ex_3.c,84 :: 		}
L_end_display_dezena:
0x0083	0x0008      	RETURN
; end of _display_dezena
_display_unidade:
;Timer-Counter_Ex_3.c,86 :: 		void display_unidade(){
;Timer-Counter_Ex_3.c,87 :: 		PORTC.RC5 = 1;
0x0084	0x1283      	BCF        STATUS, 5
0x0085	0x1303      	BCF        STATUS, 6
0x0086	0x1687      	BSF        PORTC, 5
;Timer-Counter_Ex_3.c,88 :: 		unidade = num%10;
0x0087	0x300A      	MOVLW      10
0x0088	0x00F4      	MOVWF      R4
0x0089	0x3000      	MOVLW      0
0x008A	0x00F5      	MOVWF      R4+1
0x008B	0x0832      	MOVF       _num, 0
0x008C	0x00F0      	MOVWF      R0
0x008D	0x0833      	MOVF       _num+1, 0
0x008E	0x00F1      	MOVWF      R0+1
0x008F	0x2024      	CALL       _Div_16X16_U
0x0090	0x0878      	MOVF       R8, 0
0x0091	0x00F0      	MOVWF      R0
0x0092	0x0879      	MOVF       R8+1, 0
0x0093	0x00F1      	MOVWF      R0+1
0x0094	0x0870      	MOVF       R0, 0
0x0095	0x00B0      	MOVWF      _unidade
0x0096	0x0871      	MOVF       R0+1, 0
0x0097	0x00B1      	MOVWF      _unidade+1
;Timer-Counter_Ex_3.c,89 :: 		PORTD = pattern[unidade];
0x0098	0x0870      	MOVF       R0, 0
0x0099	0x3E21      	ADDLW      _pattern
0x009A	0x0084      	MOVWF      FSR
0x009B	0x0800      	MOVF       INDF, 0
0x009C	0x0088      	MOVWF      PORTD
;Timer-Counter_Ex_3.c,90 :: 		delay_ms(5);
0x009D	0x300D      	MOVLW      13
0x009E	0x00FC      	MOVWF      R12
0x009F	0x30FB      	MOVLW      251
0x00A0	0x00FD      	MOVWF      R13
L_display_unidade6:
0x00A1	0x0BFD      	DECFSZ     R13, 1
0x00A2	0x28A1      	GOTO       L_display_unidade6
0x00A3	0x0BFC      	DECFSZ     R12, 1
0x00A4	0x28A1      	GOTO       L_display_unidade6
0x00A5	0x0000      	NOP
0x00A6	0x0000      	NOP
;Timer-Counter_Ex_3.c,91 :: 		PORTC.RC5 = 0;
0x00A7	0x1287      	BCF        PORTC, 5
;Timer-Counter_Ex_3.c,92 :: 		PORTD = 0;
0x00A8	0x0188      	CLRF       PORTD
;Timer-Counter_Ex_3.c,93 :: 		}
L_end_display_unidade:
0x00A9	0x0008      	RETURN
; end of _display_unidade
_config_timer:
;Timer-Counter_Ex_3.c,95 :: 		void config_timer(){
;Timer-Counter_Ex_3.c,96 :: 		OPTION_REG = 0b10000111;   // liga TIMER 0 - prescaler 1:256
0x00AA	0x3087      	MOVLW      135
0x00AB	0x1683      	BSF        STATUS, 5
0x00AC	0x1303      	BCF        STATUS, 6
0x00AD	0x0081      	MOVWF      OPTION_REG
;Timer-Counter_Ex_3.c,97 :: 		TMR0 = 61;                 // carregamento incial do registrador TMR0
0x00AE	0x303D      	MOVLW      61
0x00AF	0x1283      	BCF        STATUS, 5
0x00B0	0x0081      	MOVWF      TMR0
;Timer-Counter_Ex_3.c,98 :: 		INTCON.TMR0IF = 0;         // reincia a flag de estouro do TIMER 0
0x00B1	0x110B      	BCF        INTCON, 2
;Timer-Counter_Ex_3.c,99 :: 		}
L_end_config_timer:
0x00B2	0x0008      	RETURN
; end of _config_timer
_main:
0x00B3	0x303F      	MOVLW      63
0x00B4	0x1283      	BCF        STATUS, 5
0x00B5	0x1303      	BCF        STATUS, 6
0x00B6	0x00A1      	MOVWF      _pattern
0x00B7	0x3006      	MOVLW      6
0x00B8	0x00A2      	MOVWF      34
0x00B9	0x305B      	MOVLW      91
0x00BA	0x00A3      	MOVWF      35
0x00BB	0x304F      	MOVLW      79
0x00BC	0x00A4      	MOVWF      36
0x00BD	0x3066      	MOVLW      102
0x00BE	0x00A5      	MOVWF      37
0x00BF	0x306D      	MOVLW      109
0x00C0	0x00A6      	MOVWF      38
0x00C1	0x307D      	MOVLW      125
0x00C2	0x00A7      	MOVWF      39
0x00C3	0x3007      	MOVLW      7
0x00C4	0x00A8      	MOVWF      40
0x00C5	0x307F      	MOVLW      127
0x00C6	0x00A9      	MOVWF      41
0x00C7	0x306F      	MOVLW      111
0x00C8	0x00AA      	MOVWF      42
;Timer-Counter_Ex_3.c,46 :: 		void main() {
;Timer-Counter_Ex_3.c,48 :: 		ADCON1 = 7; // configura A/D para todo digital
0x00C9	0x3007      	MOVLW      7
0x00CA	0x1683      	BSF        STATUS, 5
0x00CB	0x009F      	MOVWF      ADCON1
;Timer-Counter_Ex_3.c,50 :: 		config_ports();          // chama função de configuração de ports
0x00CC	0x2058      	CALL       _config_ports
;Timer-Counter_Ex_3.c,51 :: 		config_interrupt();      // chama função de configuração de interrupções
0x00CD	0x2048      	CALL       _config_interrupt
;Timer-Counter_Ex_3.c,52 :: 		config_timer();          // chama função de configuração de timers
0x00CE	0x20AA      	CALL       _config_timer
;Timer-Counter_Ex_3.c,54 :: 		num = 0;
0x00CF	0x01B2      	CLRF       _num
0x00D0	0x01B3      	CLRF       _num+1
;Timer-Counter_Ex_3.c,56 :: 		while(1){
L_main0:
;Timer-Counter_Ex_3.c,57 :: 		if(num == 100) num = 0;
0x00D1	0x3000      	MOVLW      0
0x00D2	0x0633      	XORWF      _num+1, 0
0x00D3	0x1D03      	BTFSS      STATUS, 2
0x00D4	0x28D7      	GOTO       L__main8
0x00D5	0x3064      	MOVLW      100
0x00D6	0x0632      	XORWF      _num, 0
L__main8:
0x00D7	0x1D03      	BTFSS      STATUS, 2
0x00D8	0x28DB      	GOTO       L_main2
0x00D9	0x01B2      	CLRF       _num
0x00DA	0x01B3      	CLRF       _num+1
L_main2:
;Timer-Counter_Ex_3.c,58 :: 		display_dezena();
0x00DB	0x2062      	CALL       _display_dezena
;Timer-Counter_Ex_3.c,59 :: 		display_unidade();
0x00DC	0x2084      	CALL       _display_unidade
;Timer-Counter_Ex_3.c,60 :: 		}
0x00DD	0x28D1      	GOTO       L_main0
;Timer-Counter_Ex_3.c,62 :: 		}
L_end_main:
0x00DE	0x28DE      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004      [32]    _interrupt
0x0024      [29]    _Div_16X16_U
0x0041       [7]    _____DoICP
0x0048       [4]    _config_interrupt
0x004C      [12]    ___CC2DW
0x0058      [10]    _config_ports
0x0062      [34]    _display_dezena
0x0084      [38]    _display_unidade
0x00AA       [9]    _config_timer
0x00B3      [44]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0007       [1]    PORTC
0x0008       [1]    PORTD
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x0021      [10]    _pattern
0x002B       [2]    _dezena
0x002D       [1]    _cont
0x002E       [2]    ___DoICPAddr
0x0030       [2]    _unidade
0x0032       [2]    _num
0x0034       [1]    ___savePCLATH
0x0035       [1]    ___saveSTATUS
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [1]    OPTION_REG
0x0087       [1]    TRISC
0x0088       [1]    TRISD
0x009F       [1]    ADCON1
